(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{102:function(e,i,r){"use strict";r.r(i),r.d(i,"frontMatter",(function(){return s})),r.d(i,"metadata",(function(){return n})),r.d(i,"toc",(function(){return c})),r.d(i,"default",(function(){return p}));var t=r(3),a=r(7),o=(r(0),r(124)),s={id:"eosio-sdk-libraries",title:"EOSIO SDK Libraries",sidebar_label:"EOSIO SDK Libraries"},n={unversionedId:"tools/eosio-sdk-libraries",id:"tools/eosio-sdk-libraries",isDocsHomePage:!1,title:"EOSIO SDK Libraries",description:"APIs for integrating with EOSIO blockchains",source:"@site/docs/tools/eosio-sdk-libraries.md",slug:"/tools/eosio-sdk-libraries",permalink:"/docs/tools/eosio-sdk-libraries",editUrl:"https://github.com/eoscostarica/guide.eoscostarica.io/tree/master/docs/tools/eosio-sdk-libraries.md",version:"current",lastUpdatedBy:"Leister Francisco Alvarez Campos",lastUpdatedAt:1611339263,sidebar_label:"EOSIO SDK Libraries",sidebar:"docs",previous:{title:"Block Explorers",permalink:"/docs/tools/block-explorers"},next:{title:"Frequently Asked Questions",permalink:"/docs/tools/frequently-asked-questions"}},c=[{value:"JavaScript",id:"javascript",children:[{value:"eosjs",id:"eosjs",children:[]},{value:"eosjs-keygen",id:"eosjs-keygen",children:[]}]},{value:"Swift SDK",id:"swift-sdk",children:[{value:"eosio-swift",id:"eosio-swift",children:[]},{value:"eosio-swift-abieos-serialization-provider",id:"eosio-swift-abieos-serialization-provider",children:[]},{value:"eosio-swift-ecc",id:"eosio-swift-ecc",children:[]},{value:"eosio-swift-reference-ios-authenticator-signature-provider",id:"eosio-swift-reference-ios-authenticator-signature-provider",children:[]},{value:"eosio-swift-softkey-signature-provider",id:"eosio-swift-softkey-signature-provider",children:[]},{value:"eosio-swift-vault-signature-provider",id:"eosio-swift-vault-signature-provider",children:[]},{value:"eosio-swift-vault",id:"eosio-swift-vault",children:[]}]},{value:"Java SDK",id:"java-sdk",children:[{value:"eosio-java-android-abieos-serialization-provider",id:"eosio-java-android-abieos-serialization-provider",children:[]},{value:"eosio-java-android-rpc-provider",id:"eosio-java-android-rpc-provider",children:[]},{value:"eosio-java-softkey-signature-provider",id:"eosio-java-softkey-signature-provider",children:[]},{value:"eosio-android-keystore-signature-provider",id:"eosio-android-keystore-signature-provider",children:[]}]}],l={toc:c};function p(e){var i=e.components,r=Object(a.a)(e,["components"]);return Object(o.a)("wrapper",Object(t.a)({},l,r,{components:i,mdxType:"MDXLayout"}),Object(o.a)("p",null,"APIs for integrating with EOSIO blockchains"),Object(o.a)("h2",{id:"javascript"},"JavaScript"),Object(o.a)("p",null,"EOSJS is a JavaScript library for the integration with EOSIO based blockchains using EOSIO's RPC API. This library was created to provide a JavaScript interface for the interaction between web applications for the final user and EOSIO blockchains. As this develops a significant amount of applications in JavaScript, this library is designed to provide a higher support to the ecosystem in general and establishes the better practices in the industry for the interaction of the web applications with EOSIO blockchains."),Object(o.a)("h3",{id:"eosjs"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://developers.eos.io/manuals/eosjs/latest/index"}),"eosjs")),Object(o.a)("p",null,"A general purpose Javascript library which provides an API for integrating with EOSIO-based blockchains using the EOSIO Nodeos RPC API"),Object(o.a)("h3",{id:"eosjs-keygen"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosjs-keygen"}),"eosjs-keygen")),Object(o.a)("p",null,"A Javascript library for managing keys in local storage"),Object(o.a)("h2",{id:"swift-sdk"},"Swift SDK"),Object(o.a)("h3",{id:"eosio-swift"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift"}),"eosio-swift")),Object(o.a)("p",null,"An API for integrating with EOSIO-based blockchains using the EOSIO RPC API"),Object(o.a)("h3",{id:"eosio-swift-abieos-serialization-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-abieos-serialization-provider"}),"eosio-swift-abieos-serialization-provider")),Object(o.a)("p",null,"A pluggable serialization provider for EOSIO SDK for Swift."),Object(o.a)("h3",{id:"eosio-swift-ecc"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-ecc"}),"eosio-swift-ecc")),Object(o.a)("p",null,"A library for working with public and private keys, cryptographic signatures, encryption/decryption, etc. as part of the EOSIO SDK for Swift family of libraries"),Object(o.a)("h3",{id:"eosio-swift-reference-ios-authenticator-signature-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-reference-ios-authenticator-signature-provider"}),"eosio-swift-reference-ios-authenticator-signature-provider")),Object(o.a)("p",null,"A pluggable signature provider for EOSIO SDK for Swift"),Object(o.a)("h3",{id:"eosio-swift-softkey-signature-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-softkey-signature-provider"}),"eosio-swift-softkey-signature-provider")),Object(o.a)("p",null,"An example pluggable signature provider for EOSIO SDK for Swift. It allows for signing transactions using in-memory K1 keys"),Object(o.a)("h3",{id:"eosio-swift-vault-signature-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-vault-signature-provider"}),"eosio-swift-vault-signature-provider")),Object(o.a)("p",null,"A pluggable signature provider for EOSIO SDK for Swift"),Object(o.a)("h3",{id:"eosio-swift-vault"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-vault"}),"eosio-swift-vault")),Object(o.a)("p",null,"An utility library for working with public/private keys and signing with Apple's Keychain and Secure Enclave"),Object(o.a)("h2",{id:"java-sdk"},"Java SDK"),Object(o.a)("h3",{id:"eosio-java-android-abieos-serialization-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-java-android-abieos-serialization-provider"}),"eosio-java-android-abieos-serialization-provider")),Object(o.a)("p",null,"A pluggable serialization provider for EOSIO SDK for Java"),Object(o.a)("h3",{id:"eosio-java-android-rpc-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-java-android-rpc-provider"}),"eosio-java-android-rpc-provider")),Object(o.a)("p",null,"An Android RPC provider implementation for use within EOSIO SDK for Java as a plugin."),Object(o.a)("h3",{id:"eosio-java-softkey-signature-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-java-softkey-signature-provider"}),"eosio-java-softkey-signature-provider")),Object(o.a)("p",null,"An example pluggable signature provider for EOSIO SDK for Java"),Object(o.a)("h3",{id:"eosio-android-keystore-signature-provider"},Object(o.a)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-android-keystore-signature-provider"}),"eosio-android-keystore-signature-provider")),Object(o.a)("p",null,"An example pluggable signature provider for EOSIO SDK for Java written in Kotlin"))}p.isMDXComponent=!0},124:function(e,i,r){"use strict";r.d(i,"a",(function(){return b}));var t=r(0),a=r.n(t);function o(e,i,r){return i in e?Object.defineProperty(e,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[i]=r,e}function s(e,i){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),r.push.apply(r,t)}return r}function n(e){for(var i=1;i<arguments.length;i++){var r=null!=arguments[i]?arguments[i]:{};i%2?s(Object(r),!0).forEach((function(i){o(e,i,r[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(r,i))}))}return e}function c(e,i){if(null==e)return{};var r,t,a=function(e,i){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],i.indexOf(r)>=0||(a[r]=e[r]);return a}(e,i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],i.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var i=a.a.useContext(l),r=i;return e&&(r="function"==typeof e?e(i):n(n({},i),e)),r},d={inlineCode:"code",wrapper:function(e){var i=e.children;return a.a.createElement(a.a.Fragment,{},i)}},u=a.a.forwardRef((function(e,i){var r=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),b=t,f=u["".concat(s,".").concat(b)]||u[b]||d[b]||o;return r?a.a.createElement(f,n(n({ref:i},l),{},{components:r})):a.a.createElement(f,n({ref:i},l))}));function b(e,i){var r=arguments,t=i&&i.mdxType;if("string"==typeof e||t){var o=r.length,s=new Array(o);s[0]=u;var n={};for(var c in i)hasOwnProperty.call(i,c)&&(n[c]=i[c]);n.originalType=e,n.mdxType="string"==typeof e?e:t,s[1]=n;for(var l=2;l<o;l++)s[l]=r[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);